#Requires -Version 7.0\n# Azure環境セットアップスクリプト - MCP Agent System\n\nparam(\n    [Parameter(Mandatory = $true)]\n    [string]$ResourceGroupName,\n    \n    [Parameter(Mandatory = $true)]\n    [string]$Location = \"East US\",\n    \n    [Parameter(Mandatory = $false)]\n    [string]$AppName = \"mcp-agent-system\",\n    \n    [Parameter(Mandatory = $false)]\n    [switch]$SkipLogin\n)\n\n# カラー出力関数\nfunction Write-ColorOutput {\n    param(\n        [string]$Message,\n        [string]$Color = \"White\"\n    )\n    \n    Write-Host $Message -ForegroundColor $Color\n}\n\n# エラーハンドリング\n$ErrorActionPreference = \"Stop\"\n\ntry {\n    Write-ColorOutput \"🚀 Azure環境セットアップを開始します...\" \"Green\"\n    \n    # Azure CLI ログイン確認\n    if (-not $SkipLogin) {\n        Write-ColorOutput \"📋 Azure CLI へのログインを確認中...\" \"Yellow\"\n        \n        try {\n            $account = az account show --query \"user.name\" -o tsv 2>$null\n            if ($account) {\n                Write-ColorOutput \"✅ Azure CLI にログイン済み: $account\" \"Green\"\n            } else {\n                throw \"Not logged in\"\n            }\n        } catch {\n            Write-ColorOutput \"🔐 Azure CLI へのログインが必要です...\" \"Yellow\"\n            az login\n        }\n    }\n    \n    # リソースグループ作成\n    Write-ColorOutput \"📦 リソースグループを作成中: $ResourceGroupName\" \"Yellow\"\n    az group create --name $ResourceGroupName --location $Location\n    \n    # Function App作成\n    Write-ColorOutput \"⚡ Function Appを作成中: $AppName\" \"Yellow\"\n    \n    $storageAccountName = ($AppName + \"storage\").ToLower() -replace \"[^a-z0-9]\", \"\"\n    if ($storageAccountName.Length -gt 24) {\n        $storageAccountName = $storageAccountName.Substring(0, 24)\n    }\n    \n    # ストレージアカウント作成\n    az storage account create \\\n        --name $storageAccountName \\\n        --location $Location \\\n        --resource-group $ResourceGroupName \\\n        --sku Standard_LRS\n    \n    # Function App作成\n    az functionapp create \\\n        --resource-group $ResourceGroupName \\\n        --consumption-plan-location $Location \\\n        --runtime powershell \\\n        --runtime-version 7.2 \\\n        --name $AppName \\\n        --storage-account $storageAccountName \\\n        --functions-version 4\n    \n    # アプリケーション設定\n    Write-ColorOutput \"⚙️ アプリケーション設定を構成中...\" \"Yellow\"\n    \n    az functionapp config appsettings set \\\n        --name $AppName \\\n        --resource-group $ResourceGroupName \\\n        --settings FUNCTIONS_WORKER_RUNTIME=powershell \\\n                   OPENAI_API_KEY=$env:OPENAI_API_KEY \\\n                   JWT_SECRET=$env:JWT_SECRET\n    \n    # CORS設定\n    az functionapp cors add \\\n        --name $AppName \\\n        --resource-group $ResourceGroupName \\\n        --allowed-origins \"*\"\n    \n    # デプロイ完了\n    $functionUrl = az functionapp show --name $AppName --resource-group $ResourceGroupName --query \"defaultHostName\" -o tsv\n    \n    Write-ColorOutput \"\" \"\"\n    Write-ColorOutput \"🎉 Azure環境セットアップが完了しました！\" \"Green\"\n    Write-ColorOutput \"\" \"\"\n    Write-ColorOutput \"📋 デプロイ情報:\" \"Cyan\"\n    Write-ColorOutput \"   リソースグループ: $ResourceGroupName\" \"White\"\n    Write-ColorOutput \"   Function App: $AppName\" \"White\"\n    Write-ColorOutput \"   URL: https://$functionUrl\" \"White\"\n    Write-ColorOutput \"\" \"\"\n    Write-ColorOutput \"🔧 次のステップ:\" \"Cyan\"\n    Write-ColorOutput \"   1. コードをデプロイ: func azure functionapp publish $AppName\" \"White\"\n    Write-ColorOutput \"   2. 環境変数を設定\" \"White\"\n    Write-ColorOutput \"   3. ヘルスチェック: curl https://$functionUrl/api/health\" \"White\"\n    Write-ColorOutput \"\" \"\"\n    \n} catch {\n    Write-ColorOutput \"❌ エラーが発生しました: $($_.Exception.Message)\" \"Red\"\n    exit 1\n}\n\nWrite-ColorOutput \"✅ Azure環境セットアップが正常に完了しました\" \"Green\""}]